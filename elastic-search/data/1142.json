{"content": "In addition to instance variables of the enclosing class, local classes can also access local variables of the enclosing method, but only ones that are declared final. This is because the local class instance might outlive the invocation of the method, and so needs its own copy of the variable. To avoid problems with having two different copies of a mutable variable with the same name in the same scope, it is required to be final, so it cannot be changed.\n", "stemmed": "In addit instanc variabl enclos class , local class also access local variabl enclos method , one declar final . thi local class instanc might outliv invoc method , need copi variabl . To avoid problem two differ copi mutabl variabl name scope , requir final , chang .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Nested_Classes"}