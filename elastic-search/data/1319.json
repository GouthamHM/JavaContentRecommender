{"content": "This is a kind of exception conversion, from one exception to another. For example, calling a remote object using RMI, the calling method has to deal with RemoteException which is thrown if something is wrong during the communication. From the application point of view, RemoteException has no meaning, it should be transparent to the application that a remote object was used or not. So the RemoteException should be converted to an application exception.\n", "stemmed": "thi kind except convers , one except anoth . for exampl , call remot object use rmi , call method deal remoteexcept thrown someth wrong commun . from applic point view , remoteexcept mean , transpar applic remot object use . So remoteexcept convert applic except .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Nesting_Exceptions"}