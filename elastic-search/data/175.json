{"content": "Reflection is the mechanism by which Java exposes the features of a class during runtime, allowing Java programs to enumerate and access a class' methods, fields, and constructors as objects. In other words, there are object-based mirrors that reflect the Java object model, and you can use these objects to access an object's features using runtime API constructs instead of compile-time language constructs. \nEach object instance has a getClass() method, inherited from java.lang.Object, which returns an object with the runtime representation of that object's class; this object is an instance of the java.lang.Class, which in turn has methods that return the fields, methods, constructors, superclass, and other properties of that class.\nYou can use these reflection objects to access fields, invoke methods, or instantiate instances, all without having compile-time dependencies on those features. The Java runtime provides the corresponding classes for reflection. Most of the Java classes that support reflection are in the java.lang.reflect package.\nReflection is most useful for performing dynamic operations with Java \u2014 operations that are not hard-coded into a source program, but that are determined at run time. One of the most important aspects of reflection is dynamic class loading.\n", "stemmed": "reflect mechan java expos featur class runtim , allow java program enumer access class ' method , field , constructor object . In word , object-bas mirror reflect java object model , use object access object 's featur use runtim api construct instead compile-tim languag construct . each object instanc getclass ( ) method , inherit java.lang.object , return object runtim represent object 's class ; object instanc java.lang.class , turn method return field , method , constructor , superclass , properti class . you use reflect object access field , invok method , instanti instanc , without compile-tim depend featur . the java runtim provid correspond class reflect . most java class support reflect java.lang.reflect packag . reflect use perform dynam oper java \u2014 oper hard-cod sourc program , determin run time . one import aspect reflect dynam class load .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Reflection/Overview"}