{"content": "On Linux and Solaris platforms, if the native code registers itself as a signal handler, it could intercept signals intended for the JVM.  Signal chaining should be used to allow native code to better interoperate with JVM. On Windows platforms, Structured Exception Handling (SEH) may be employed to wrap native code in SEH try/catch blocks so as to capture machine (CPU/FPU) generated software interrupts (such as NULL pointer access violations and divide-by-zero operations), and to handle these situations before the interrupt is propagated back up into the JVM (i.e. Java side code), in all likelihood resulting in an unhandled exception.\n", "stemmed": "On linux solari platform , nativ code regist signal handler , could intercept signal intend jvm . signal chain use allow nativ code better interoper jvm . On window platform , structur except handl ( seh ) may employ wrap nativ code seh try/catch block captur machin ( cpu/fpu ) gener softwar interrupt ( null pointer access violat divide-by-zero oper ) , handl situat interrupt propag back jvm ( i.e . java side code ) , likelihood result unhandl except .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Java_Native_Interface"}