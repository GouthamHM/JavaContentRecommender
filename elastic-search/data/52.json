{"content": "The standard JIT compiler runs on demand. When a method is called repeatedly, the JIT compiler analyzes the bytecode and produces highly efficient machine code, which runs very fast. The JIT compiler is smart enough to recognize when the code has already been compiled, so as the application runs, compilation happens only as needed. As Java applications run, they tend to become faster and faster, because the JIT can perform runtime profiling and optimization to the code to meet the execution environment. Methods or code blocks which do not run often receive less optimization; those which run often (so called hotspots) receive more profiling and optimization.\n", "stemmed": "the standard jit compil run demand . when method call repeatedli , jit compil analyz bytecod produc highli effici machin code , run fast . the jit compil smart enough recogn code alreadi compil , applic run , compil happen need . As java applic run , tend becom faster faster , jit perform runtim profil optim code meet execut environ . method code block run often receiv less optim ; run often ( call hotspot ) receiv profil optim .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Compilation"}