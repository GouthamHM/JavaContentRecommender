{"content": "Using the Event Model framework allows us to separate the two main responsibilities cleanly and affords us the flexibility we are looking for. If we implement the logic for reading the number stream in a single class and treat the reading of a single number as an event, the Event Model allows us to broadcast that event (and the number) to as many stream processors as we like. The class for reading the number stream will act as the event source of the program and each stream processor will be a listener. Since each listener is a class of its own and can be registered with the stream reader (or not) this means our model allows us to have multiple, independent stream processing that we can add on to without affecting the code to read the stream or any pre-existing stream processor.\n", "stemmed": "use event model framework allow us separ two main respons cleanli afford us flexibl look . If implement logic read number stream singl class treat read singl number event , event model allow us broadcast event ( number ) mani stream processor like . the class read number stream act event sourc program stream processor listen . sinc listen class regist stream reader ( ) mean model allow us multipl , independ stream process add without affect code read stream pre-exist stream processor .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Event_Handling"}