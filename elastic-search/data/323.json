{"content": "\nLanguage compilers are adept at pointing out most of the erroneous code in a program, however there are some errors that only become apparent when the program is executed. Consider the code listing 6.1; here, the program defines a method divide that does a simple division operation taking two integers as parameter arguments and returning the result of their division. It can safely be assumed that when the divide(4, 2) statement is called, it would return the number 2. However, consider the next statement, where the program relies upon the provided command line arguments to generate a division operation. What if the user provides the number zero (0) as the second argument? We all know that division  by zero is impossible, but the compiler couldn't possibly have anticipated the user providing zero as an argument.\n\n", "stemmed": "languag compil adept point erron code program , howev error becom appar program execut . consid code list 6.1 ; , program defin method divid simpl divis oper take two integ paramet argument return result divis . It safe assum divid ( 4 , 2 ) statement call , would return number 2 . howev , consid next statement , program reli upon provid command line argument gener divis oper . what user provid number zero ( 0 ) second argument ? We know divis zero imposs , compil could n't possibl anticip user provid zero argument .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Throwing_and_Catching_Exceptions"}