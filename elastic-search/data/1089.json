{"content": "While this could be done by rewriting both Employee and Building so that they each inherit from one class named NamedObject, or by creating a NamedObject interface, both methods have their own problems. Using inheritance is limiting, as each child class can only inherit from one parent class, which limits the number of different classes that can share properties, as well as the number of common properties that can be shared. Furthermore, using inheritance to express relationships other than a simple \"is-a\" relationship can be confusing, as can looking through dozens of class definitions to find where a single \"dumb\" getter function is implemented. Creating an interface fixes the problems caused by the multiple inheritance rule, as a class can use any number of interfaces, but it still requires every shared property to be explicitly spelled out.\n", "stemmed": "while could done rewrit employe build inherit one class name namedobject , creat namedobject interfac , method problem . use inherit limit , child class inherit one parent class , limit number differ class share properti , well number common properti share . furthermor , use inherit express relationship simpl `` is-a '' relationship confus , look dozen class definit find singl `` dumb '' getter function implement . creat interfac fix problem caus multipl inherit rule , class use number interfac , still requir everi share properti explicitli spell .", "link": "https://en.wikibooks.org/wiki/Java_Programming/JavaBeans"}