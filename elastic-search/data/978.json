{"content": "Java does not support full orthogonal multiple inheritance (i.e. Java does not allow you to create a subclass from two classes). Multiple inheritance in C++ has complicated rules to disambiguate fields and methods inherited from multiple superclasses and types that are inherited multiple times.  By separating interface from implementation, interfaces offer much of the benefit of multiple inheritance with less complexity and ambiguity.  The price of no multiple inheritance is some code redundancy; since interfaces only define the signature of a class but cannot contain any implementation, every class inheriting an interface must provide the implementation of the defined methods, unlike in pure multiple inheritance, where the implementation is also inherited. The major benefit of that is that all Java objects can have a common ancestor (a class called Object).\n", "stemmed": "java support full orthogon multipl inherit ( i.e . java allow creat subclass two class ) . multipl inherit c++ complic rule disambigu field method inherit multipl superclass type inherit multipl time . By separ interfac implement , interfac offer much benefit multipl inherit less complex ambigu . the price multipl inherit code redund ; sinc interfac defin signatur class contain implement , everi class inherit interfac must provid implement defin method , unlik pure multipl inherit , implement also inherit . the major benefit java object common ancestor ( class call object ) .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Interfaces"}