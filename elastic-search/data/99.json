{"content": "In this situation there are two general options for making a program wait for an external event to happen. The first of these is called polling and means you write a little loop of the for \"while the event has not happened, check again\". Polling is very simple to build and very straightforward. But it is also very wasteful: it means a program takes up processor time in order to do absolutely nothing but wait. This is usually considered too much of a drawback for programs that have to do a lot of waiting. Programs that have a lot of waiting moments (for example, programs that have a graphical user interface and often have to wait for long periods of time until the user does something) usually fare much better when they use the other mechanism: event-driven programming.\n", "stemmed": "In situat two gener option make program wait extern event happen . the first call poll mean write littl loop `` event happen , check '' . poll simpl build straightforward . but also wast : mean program take processor time order absolut noth wait . thi usual consid much drawback program lot wait . program lot wait moment ( exampl , program graphic user interfac often wait long period time user someth ) usual fare much better use mechan : event-driven program .", "link": "https://en.wikibooks.org/wiki/Java_Programming/Event_Handling"}